#!/usr/bin/env bash

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT=$(dirname "$DIR")

if [ -d "${HOME}/.local/bin" ]; then
    export PATH="${HOME}/.local/bin:${PATH}"
fi

command -v ansible-playbook >/dev/null || {
    echo "ansible-playbook: command not found"
    exit 127
}

set -e

# Variables to pass to ansible-playbook
ansible_vars=(
    "'linuxbrew_use_installer':false"
)
extra_vars=$(printf ",%s" "${ansible_vars[@]}")
extra_vars="{${extra_vars:1}}"

# Paths in which Ansible will search for Roles
ANSIBLE_ROLES_PATH=$(dirname "$PROJECT_ROOT")
export ANSIBLE_ROLES_PATH

cd "$PROJECT_ROOT"

echo "*** Check syntax"

ansible-playbook tests/test.yml -i tests/inventory --syntax-check

echo "*** Run Ansible playbook"

ansible-playbook tests/test.yml -i tests/inventory --connection=local \
    -v \
    -e "${extra_vars}"
run_status=$?
if [[ ${run_status} -eq 0 ]]; then
    echo 'Run: pass'
else
    echo 'Run: fail'
    exit 1
fi

echo "*** Idempotence test"

ansible-playbook tests/test.yml -i tests/inventory --connection=local \
    -e "${extra_vars}" |
    grep -q 'changed=0.*failed=0'
idempotence_status=$?
if [[ $idempotence_status -eq 0 ]]; then
    echo 'Idempotence test: pass'
else
    echo 'Idempotence test: fail'
    exit 1
fi

echo "*** Ansible playbooks completed on image ${TEST_IMAGE}"

echo "*** Verify installed Linuxbrew version in bash"
bash -i -c 'command -v brew && brew --version'

echo "*** Tests completed on image ${TEST_IMAGE}"
