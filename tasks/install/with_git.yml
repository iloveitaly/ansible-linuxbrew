---
- name: Get current user
  ansible.builtin.command: whoami
  register: linuxbrew_whoami
  changed_when: false
  become: false

- name: Set Linuxbrew user
  ansible.builtin.set_fact:
    linuxbrew_user: "{{ linuxbrew_whoami.stdout }}"
  when: linuxbrew_user is undefined

- name: Get group for user {{ linuxbrew_user }}
  ansible.builtin.command: id -g
  register: linuxbrew_user_group
  become_user: "{{ linuxbrew_user }}"
  changed_when: false

- name: Set Linuxbrew group
  ansible.builtin.set_fact:
    linuxbrew_group: "{{ linuxbrew_user_group.stdout }}"
  when: linuxbrew_group is undefined

- name: Create Linuxbrew directory
  ansible.builtin.file:
    path: "{{ linuxbrew_prefix_shared }}"
    state: directory
    owner: "{{ linuxbrew_user }}"
    group: "{{ linuxbrew_group }}"
    mode: "0755"
  become: true

- name: Create Linuxbrew directories
  ansible.builtin.file:
    path: "{{ linuxbrew_prefix_shared }}/{{ item }}"
    state: directory
    owner: "{{ linuxbrew_user }}"
    group: "{{ linuxbrew_group }}"
    mode: "0755"
  with_items:
    - bin
    - etc
    - include
    - lib
    - sbin
    - share
    - var
    - var/homebrew/linked
    - opt
    - share/zsh
    - share/zsh/site-functions
    - Cellar
    - Caskroom
    - Homebrew
    - Frameworks

- name: Set path to Homebrew repository
  ansible.builtin.set_fact:
    linuxbrew_repository: "{{ linuxbrew_prefix_shared }}/Homebrew"

- name: Clone Homebrew repository
  ansible.builtin.git:
    repo: "{{ linuxbrew_brew_repo }}"
    dest: "{{ linuxbrew_repository }}"
    version: "{{ linuxbrew_brew_version }}"

- name: Clone Homebrew Core Tap repository
  ansible.builtin.git:
    repo: "{{ linuxbrew_core_tap_repo }}"
    dest: "{{ linuxbrew_repository }}/Library/Taps/homebrew/homebrew-core"
    version: "{{ linuxbrew_core_tap_version }}"

- name: Update permissions
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ linuxbrew_user }}"
    group: "{{ linuxbrew_group }}"
    mode: "0755"
  with_items:
    - "{{ linuxbrew_repository }}"
    - "{{ linuxbrew_repository }}/Library/Taps/homebrew/homebrew-core"

- name: Create symlink to brew binary
  ansible.builtin.file:
    dest: "{{ linuxbrew_prefix_shared }}/bin/brew"
    src: "{{ linuxbrew_repository }}/bin/brew"
    state: "link"
  when: linuxbrew_prefix_shared != linuxbrew_repository

- name: Path to portable-ruby vendor directory
  ansible.builtin.set_fact:
    # yamllint disable-line rule:line-length
    linuxbrew_ruby_current: "{{ linuxbrew_repository }}/vendor/portable-ruby/current"

- name: Path to portable-ruby binary
  ansible.builtin.set_fact:
    linuxbrew_ruby_path: "{{ linuxbrew_ruby_current }}/bin/ruby"

- name: Update Homebrew to install portable Ruby
  # yamllint disable-line rule:line-length
  ansible.builtin.command: "{{ linuxbrew_prefix_shared }}/bin/brew update --force"
  args:
    creates: "{{ linuxbrew_ruby_path }}"
